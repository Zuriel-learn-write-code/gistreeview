# Primary app DB connection (Supabase - active)
# Use SSL when connecting to Supabase; the `?sslmode=require` parameter enforces TLS.
DATABASE_URL="postgresql://postgres:IaWbJZ79nnp8FBex@db.ptimvcfiwjekwbnwuwgw.supabase.co:5432/postgres?sslmode=require"

# Local Postgres fallback (commented out to avoid accidental override)
# DATABASE_URL=postgresql://postgres:akira123@localhost:5432/gisdbtree

# ALLOWED_ORIGINS used by CORS
ALLOWED_ORIGINS=http://localhost:5173,https://gistreeview.vercel.app

# Cloudinary credentials (example - keep secrets out of VCS in production)
CLOUDINARY_CLOUD_NAME=dwqdflh60
CLOUDINARY_API_KEY=118999895118462
CLOUDINARY_API_SECRET=DqDjyxws15ksUpg08ESdkdC9G4I

# -----------------------------
# PgBouncer examples
# -----------------------------
# Option A — Use the provided docker-compose in backend/pgbouncer (runs Postgres + PgBouncer):
#  - DB user: pguser
#  - DB pass: example
#  - DB name: gistreeview_dev
#  - PgBouncer listens on host port 6432
# Example DATABASE_URL when using that compose setup:
# DATABASE_URL=postgresql://pguser:example@localhost:6432/gistreeview_dev

# Option B — Run PgBouncer to proxy your existing local Postgres (no containerized Postgres):
# 1) Run PgBouncer and point its upstream to your local Postgres (host.docker.internal:5432 when running PgBouncer in Docker on Windows/Mac).
# 2) Use the same DB credentials you already have (postgres / akira123 / gisdbtree) and point Prisma at PgBouncer:
# DATABASE_URL=postgresql://postgres:akira123@localhost:6432/gisdbtree

# Notes:
# - Ensure PgBouncer is configured with pool_mode = transaction (see backend/pgbouncer/pgbouncer.ini).
# - After changing DATABASE_URL, run: npx prisma generate (and prisma migrate dev if you need to apply migrations locally).

# -----------------------------
# Supabase (optional)
# -----------------------------
# If you use Supabase as a Postgres provider, set these values from your Supabase project settings.
# You can use the Supabase connection string as DATABASE_URL or use the anon/service role keys for other SDK usage.
VITE_SUPABASE_URL=https://ptimvcfiwjekwbnwuwgw.supabase.co
VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB0aW12Y2Zpd2pla3dibnd1d2d3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg3MzMzNjIsImV4cCI6MjA3NDMwOTM2Mn0.z43IkOAazQoKc9zBGfbqByLFAjXH9e4k6F5iUQ26-mg
# Only required for server-side privileged operations (keep secret):
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InB0aW12Y2Zpd2pla3dibnd1d2d3Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1ODczMzM2MiwiZXhwIjoyMDc0MzA5MzYyfQ.GHjW29qShUoSPgoQtqTr-y7ddUEcluHJ0phv8f4L0Vc

# Example: use Supabase Postgres as Prisma DB
# DATABASE_URL=postgresql://postgres:password@db.supabase.co:5432/postgres
